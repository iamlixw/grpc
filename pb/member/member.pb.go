// Code generated by protoc-gen-go. DO NOT EDIT.
// source: member.proto

/*
Package member is a generated protocol buffer package.

It is generated from these files:
	member.proto

It has these top-level messages:
	RegistRequest
	RegistReply
*/
package member

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegistRequest struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Mobile string `protobuf:"bytes,2,opt,name=mobile" json:"mobile,omitempty"`
	Email  string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (m *RegistRequest) Reset()                    { *m = RegistRequest{} }
func (m *RegistRequest) String() string            { return proto.CompactTextString(m) }
func (*RegistRequest) ProtoMessage()               {}
func (*RegistRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegistRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegistRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *RegistRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type RegistReply struct {
	Registed string `protobuf:"bytes,1,opt,name=Registed" json:"Registed,omitempty"`
}

func (m *RegistReply) Reset()                    { *m = RegistReply{} }
func (m *RegistReply) String() string            { return proto.CompactTextString(m) }
func (*RegistReply) ProtoMessage()               {}
func (*RegistReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegistReply) GetRegisted() string {
	if m != nil {
		return m.Registed
	}
	return ""
}

func init() {
	proto.RegisterType((*RegistRequest)(nil), "RegistRequest")
	proto.RegisterType((*RegistReply)(nil), "RegistReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Member service

type MemberClient interface {
	// 用户
	Regist(ctx context.Context, in *RegistRequest, opts ...grpc.CallOption) (*RegistReply, error)
}

type memberClient struct {
	cc *grpc.ClientConn
}

func NewMemberClient(cc *grpc.ClientConn) MemberClient {
	return &memberClient{cc}
}

func (c *memberClient) Regist(ctx context.Context, in *RegistRequest, opts ...grpc.CallOption) (*RegistReply, error) {
	out := new(RegistReply)
	err := grpc.Invoke(ctx, "/Member/Regist", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Member service

type MemberServer interface {
	// 用户
	Regist(context.Context, *RegistRequest) (*RegistReply, error)
}

func RegisterMemberServer(s *grpc.Server, srv MemberServer) {
	s.RegisterService(&_Member_serviceDesc, srv)
}

func _Member_Regist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemberServer).Regist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Member/Regist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemberServer).Regist(ctx, req.(*RegistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Member_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Member",
	HandlerType: (*MemberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Regist",
			Handler:    _Member_Regist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "member.proto",
}

func init() { proto.RegisterFile("member.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x4d, 0xcd, 0x4d,
	0x4a, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x0a, 0xe4, 0xe2, 0x0d, 0x4a, 0x4d, 0xcf,
	0x2c, 0x2e, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc,
	0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0x72, 0xf3,
	0x93, 0x32, 0x73, 0x52, 0x25, 0x98, 0xc0, 0xa2, 0x50, 0x9e, 0x90, 0x08, 0x17, 0x6b, 0x6a, 0x6e,
	0x62, 0x66, 0x8e, 0x04, 0x33, 0x58, 0x18, 0xc2, 0x51, 0xd2, 0xe4, 0xe2, 0x86, 0x19, 0x59, 0x90,
	0x53, 0x29, 0x24, 0xc5, 0xc5, 0x01, 0xe1, 0xa6, 0xa6, 0x40, 0x0d, 0x85, 0xf3, 0x8d, 0x8c, 0xb8,
	0xd8, 0x7c, 0xc1, 0xae, 0x11, 0xd2, 0xe0, 0x62, 0x83, 0x88, 0x0a, 0xf1, 0xe9, 0xa1, 0x38, 0x48,
	0x8a, 0x47, 0x0f, 0xc9, 0x34, 0x25, 0x86, 0x24, 0x36, 0xb0, 0xc3, 0x8d, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xdf, 0x7e, 0x8e, 0x05, 0xc8, 0x00, 0x00, 0x00,
}
